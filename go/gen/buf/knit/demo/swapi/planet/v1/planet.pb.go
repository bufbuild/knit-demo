// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: buf/knit/demo/swapi/planet/v1/planet.proto

package planetv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Planet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Climates       []string               `protobuf:"bytes,2,rep,name=climates,proto3" json:"climates,omitempty"`
	Diameter       int32                  `protobuf:"varint,3,opt,name=diameter,proto3" json:"diameter,omitempty"`
	Gravity        string                 `protobuf:"bytes,4,opt,name=gravity,proto3" json:"gravity,omitempty"`
	Name           string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	OrbitalPeriod  int32                  `protobuf:"varint,6,opt,name=orbital_period,json=orbitalPeriod,proto3" json:"orbital_period,omitempty"`
	Population     float64                `protobuf:"fixed64,7,opt,name=population,proto3" json:"population,omitempty"`
	RotationPeriod int32                  `protobuf:"varint,8,opt,name=rotation_period,json=rotationPeriod,proto3" json:"rotation_period,omitempty"`
	SurfaceWater   float64                `protobuf:"fixed64,9,opt,name=surface_water,json=surfaceWater,proto3" json:"surface_water,omitempty"`
	Terrains       []string               `protobuf:"bytes,10,rep,name=terrains,proto3" json:"terrains,omitempty"`
	ResidentIds    []string               `protobuf:"bytes,11,rep,name=resident_ids,json=residentIds,proto3" json:"resident_ids,omitempty"`
	FilmIds        []string               `protobuf:"bytes,12,rep,name=film_ids,json=filmIds,proto3" json:"film_ids,omitempty"`
	Created        *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created,proto3" json:"created,omitempty"`
	Edited         *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=edited,proto3" json:"edited,omitempty"`
}

func (x *Planet) Reset() {
	*x = Planet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Planet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Planet) ProtoMessage() {}

func (x *Planet) ProtoReflect() protoreflect.Message {
	mi := &file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Planet.ProtoReflect.Descriptor instead.
func (*Planet) Descriptor() ([]byte, []int) {
	return file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescGZIP(), []int{0}
}

func (x *Planet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Planet) GetClimates() []string {
	if x != nil {
		return x.Climates
	}
	return nil
}

func (x *Planet) GetDiameter() int32 {
	if x != nil {
		return x.Diameter
	}
	return 0
}

func (x *Planet) GetGravity() string {
	if x != nil {
		return x.Gravity
	}
	return ""
}

func (x *Planet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Planet) GetOrbitalPeriod() int32 {
	if x != nil {
		return x.OrbitalPeriod
	}
	return 0
}

func (x *Planet) GetPopulation() float64 {
	if x != nil {
		return x.Population
	}
	return 0
}

func (x *Planet) GetRotationPeriod() int32 {
	if x != nil {
		return x.RotationPeriod
	}
	return 0
}

func (x *Planet) GetSurfaceWater() float64 {
	if x != nil {
		return x.SurfaceWater
	}
	return 0
}

func (x *Planet) GetTerrains() []string {
	if x != nil {
		return x.Terrains
	}
	return nil
}

func (x *Planet) GetResidentIds() []string {
	if x != nil {
		return x.ResidentIds
	}
	return nil
}

func (x *Planet) GetFilmIds() []string {
	if x != nil {
		return x.FilmIds
	}
	return nil
}

func (x *Planet) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Planet) GetEdited() *timestamppb.Timestamp {
	if x != nil {
		return x.Edited
	}
	return nil
}

type GetPlanetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetPlanetsRequest) Reset() {
	*x = GetPlanetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetsRequest) ProtoMessage() {}

func (x *GetPlanetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetsRequest.ProtoReflect.Descriptor instead.
func (*GetPlanetsRequest) Descriptor() ([]byte, []int) {
	return file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlanetsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetPlanetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planets []*Planet `protobuf:"bytes,1,rep,name=planets,proto3" json:"planets,omitempty"`
}

func (x *GetPlanetsResponse) Reset() {
	*x = GetPlanetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetsResponse) ProtoMessage() {}

func (x *GetPlanetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetsResponse.ProtoReflect.Descriptor instead.
func (*GetPlanetsResponse) Descriptor() ([]byte, []int) {
	return file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlanetsResponse) GetPlanets() []*Planet {
	if x != nil {
		return x.Planets
	}
	return nil
}

type ListPlanetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of items to return.
	PageSize uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListPlanetsRequest) Reset() {
	*x = ListPlanetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanetsRequest) ProtoMessage() {}

func (x *ListPlanetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanetsRequest.ProtoReflect.Descriptor instead.
func (*ListPlanetsRequest) Descriptor() ([]byte, []int) {
	return file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescGZIP(), []int{3}
}

func (x *ListPlanetsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPlanetsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListPlanetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Planets that satisfy the request criteria.
	// Max number of items is limited by page_size in the request.
	Planets []*Planet `protobuf:"bytes,1,rep,name=planets,proto3" json:"planets,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more results in the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListPlanetsResponse) Reset() {
	*x = ListPlanetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanetsResponse) ProtoMessage() {}

func (x *ListPlanetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanetsResponse.ProtoReflect.Descriptor instead.
func (*ListPlanetsResponse) Descriptor() ([]byte, []int) {
	return file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescGZIP(), []int{4}
}

func (x *ListPlanetsResponse) GetPlanets() []*Planet {
	if x != nil {
		return x.Planets
	}
	return nil
}

func (x *ListPlanetsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_buf_knit_demo_swapi_planet_v1_planet_proto protoreflect.FileDescriptor

var file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x62, 0x75, 0x66, 0x2f, 0x6b, 0x6e, 0x69, 0x74, 0x2f, 0x64, 0x65, 0x6d, 0x6f, 0x2f,
	0x73, 0x77, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x62, 0x75,
	0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x73, 0x77, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x03, 0x0a,
	0x06, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x6f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x57, 0x61, 0x74,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06,
	0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x22, 0x25, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x55, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74, 0x2e,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x52, 0x07, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x73,
	0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x82, 0x02, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69,
	0x74, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b,
	0x6e, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01,
	0x12, 0x79, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x12,
	0x31, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x65,
	0x6d, 0x6f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x42, 0x98, 0x02, 0x0a, 0x21,
	0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d,
	0x6f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x42, 0x0b, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x6b, 0x6e, 0x69, 0x74, 0x2d, 0x64, 0x65, 0x6d, 0x6f, 0x2f,
	0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x75, 0x66, 0x2f, 0x6b, 0x6e, 0x69, 0x74, 0x2f,
	0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x05,
	0x42, 0x4b, 0x44, 0x53, 0x50, 0xaa, 0x02, 0x1d, 0x42, 0x75, 0x66, 0x2e, 0x4b, 0x6e, 0x69, 0x74,
	0x2e, 0x44, 0x65, 0x6d, 0x6f, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1d, 0x42, 0x75, 0x66, 0x5c, 0x4b, 0x6e, 0x69, 0x74,
	0x5c, 0x44, 0x65, 0x6d, 0x6f, 0x5c, 0x53, 0x77, 0x61, 0x70, 0x69, 0x5c, 0x50, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x29, 0x42, 0x75, 0x66, 0x5c, 0x4b, 0x6e, 0x69, 0x74,
	0x5c, 0x44, 0x65, 0x6d, 0x6f, 0x5c, 0x53, 0x77, 0x61, 0x70, 0x69, 0x5c, 0x50, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x22, 0x42, 0x75, 0x66, 0x3a, 0x3a, 0x4b, 0x6e, 0x69, 0x74, 0x3a, 0x3a, 0x44,
	0x65, 0x6d, 0x6f, 0x3a, 0x3a, 0x53, 0x77, 0x61, 0x70, 0x69, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescOnce sync.Once
	file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescData = file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDesc
)

func file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescGZIP() []byte {
	file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescOnce.Do(func() {
		file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescData = protoimpl.X.CompressGZIP(file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescData)
	})
	return file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDescData
}

var file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_buf_knit_demo_swapi_planet_v1_planet_proto_goTypes = []interface{}{
	(*Planet)(nil),                // 0: buf.knit.demo.swapi.planet.v1.Planet
	(*GetPlanetsRequest)(nil),     // 1: buf.knit.demo.swapi.planet.v1.GetPlanetsRequest
	(*GetPlanetsResponse)(nil),    // 2: buf.knit.demo.swapi.planet.v1.GetPlanetsResponse
	(*ListPlanetsRequest)(nil),    // 3: buf.knit.demo.swapi.planet.v1.ListPlanetsRequest
	(*ListPlanetsResponse)(nil),   // 4: buf.knit.demo.swapi.planet.v1.ListPlanetsResponse
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_buf_knit_demo_swapi_planet_v1_planet_proto_depIdxs = []int32{
	5, // 0: buf.knit.demo.swapi.planet.v1.Planet.created:type_name -> google.protobuf.Timestamp
	5, // 1: buf.knit.demo.swapi.planet.v1.Planet.edited:type_name -> google.protobuf.Timestamp
	0, // 2: buf.knit.demo.swapi.planet.v1.GetPlanetsResponse.planets:type_name -> buf.knit.demo.swapi.planet.v1.Planet
	0, // 3: buf.knit.demo.swapi.planet.v1.ListPlanetsResponse.planets:type_name -> buf.knit.demo.swapi.planet.v1.Planet
	1, // 4: buf.knit.demo.swapi.planet.v1.PlanetService.GetPlanets:input_type -> buf.knit.demo.swapi.planet.v1.GetPlanetsRequest
	3, // 5: buf.knit.demo.swapi.planet.v1.PlanetService.ListPlanets:input_type -> buf.knit.demo.swapi.planet.v1.ListPlanetsRequest
	2, // 6: buf.knit.demo.swapi.planet.v1.PlanetService.GetPlanets:output_type -> buf.knit.demo.swapi.planet.v1.GetPlanetsResponse
	4, // 7: buf.knit.demo.swapi.planet.v1.PlanetService.ListPlanets:output_type -> buf.knit.demo.swapi.planet.v1.ListPlanetsResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_buf_knit_demo_swapi_planet_v1_planet_proto_init() }
func file_buf_knit_demo_swapi_planet_v1_planet_proto_init() {
	if File_buf_knit_demo_swapi_planet_v1_planet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Planet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_buf_knit_demo_swapi_planet_v1_planet_proto_goTypes,
		DependencyIndexes: file_buf_knit_demo_swapi_planet_v1_planet_proto_depIdxs,
		MessageInfos:      file_buf_knit_demo_swapi_planet_v1_planet_proto_msgTypes,
	}.Build()
	File_buf_knit_demo_swapi_planet_v1_planet_proto = out.File
	file_buf_knit_demo_swapi_planet_v1_planet_proto_rawDesc = nil
	file_buf_knit_demo_swapi_planet_v1_planet_proto_goTypes = nil
	file_buf_knit_demo_swapi_planet_v1_planet_proto_depIdxs = nil
}
