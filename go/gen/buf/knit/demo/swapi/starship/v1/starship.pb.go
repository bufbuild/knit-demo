// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: buf/knit/demo/swapi/starship/v1/starship.proto

package starshipv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Starship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mglt                 int64                  `protobuf:"varint,3,opt,name=mglt,proto3" json:"mglt,omitempty"`
	CargoCapacity        float64                `protobuf:"fixed64,4,opt,name=cargo_capacity,json=cargoCapacity,proto3" json:"cargo_capacity,omitempty"`
	Consumable           string                 `protobuf:"bytes,5,opt,name=consumable,proto3" json:"consumable,omitempty"`
	CostInCredits        *int64                 `protobuf:"varint,6,opt,name=cost_in_credits,json=costInCredits,proto3,oneof" json:"cost_in_credits,omitempty"`
	Crew                 int64                  `protobuf:"varint,7,opt,name=crew,proto3" json:"crew,omitempty"`
	HyperDriveRating     float64                `protobuf:"fixed64,8,opt,name=hyper_drive_rating,json=hyperDriveRating,proto3" json:"hyper_drive_rating,omitempty"`
	Length               float64                `protobuf:"fixed64,9,opt,name=length,proto3" json:"length,omitempty"`
	Manufacturers        []string               `protobuf:"bytes,10,rep,name=manufacturers,proto3" json:"manufacturers,omitempty"`
	Model                string                 `protobuf:"bytes,11,opt,name=model,proto3" json:"model,omitempty"`
	MaxAtmospheringSpeed *int64                 `protobuf:"varint,12,opt,name=max_atmosphering_speed,json=maxAtmospheringSpeed,proto3,oneof" json:"max_atmosphering_speed,omitempty"`
	Passengers           int64                  `protobuf:"varint,13,opt,name=passengers,proto3" json:"passengers,omitempty"`
	Class                string                 `protobuf:"bytes,14,opt,name=class,proto3" json:"class,omitempty"`
	PilotIds             []string               `protobuf:"bytes,15,rep,name=pilot_ids,json=pilotIds,proto3" json:"pilot_ids,omitempty"`
	FilmIds              []string               `protobuf:"bytes,16,rep,name=film_ids,json=filmIds,proto3" json:"film_ids,omitempty"`
	Created              *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=created,proto3" json:"created,omitempty"`
	Edited               *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=edited,proto3" json:"edited,omitempty"`
}

func (x *Starship) Reset() {
	*x = Starship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Starship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Starship) ProtoMessage() {}

func (x *Starship) ProtoReflect() protoreflect.Message {
	mi := &file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Starship.ProtoReflect.Descriptor instead.
func (*Starship) Descriptor() ([]byte, []int) {
	return file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescGZIP(), []int{0}
}

func (x *Starship) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Starship) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Starship) GetMglt() int64 {
	if x != nil {
		return x.Mglt
	}
	return 0
}

func (x *Starship) GetCargoCapacity() float64 {
	if x != nil {
		return x.CargoCapacity
	}
	return 0
}

func (x *Starship) GetConsumable() string {
	if x != nil {
		return x.Consumable
	}
	return ""
}

func (x *Starship) GetCostInCredits() int64 {
	if x != nil && x.CostInCredits != nil {
		return *x.CostInCredits
	}
	return 0
}

func (x *Starship) GetCrew() int64 {
	if x != nil {
		return x.Crew
	}
	return 0
}

func (x *Starship) GetHyperDriveRating() float64 {
	if x != nil {
		return x.HyperDriveRating
	}
	return 0
}

func (x *Starship) GetLength() float64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Starship) GetManufacturers() []string {
	if x != nil {
		return x.Manufacturers
	}
	return nil
}

func (x *Starship) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Starship) GetMaxAtmospheringSpeed() int64 {
	if x != nil && x.MaxAtmospheringSpeed != nil {
		return *x.MaxAtmospheringSpeed
	}
	return 0
}

func (x *Starship) GetPassengers() int64 {
	if x != nil {
		return x.Passengers
	}
	return 0
}

func (x *Starship) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *Starship) GetPilotIds() []string {
	if x != nil {
		return x.PilotIds
	}
	return nil
}

func (x *Starship) GetFilmIds() []string {
	if x != nil {
		return x.FilmIds
	}
	return nil
}

func (x *Starship) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Starship) GetEdited() *timestamppb.Timestamp {
	if x != nil {
		return x.Edited
	}
	return nil
}

type GetStarshipsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetStarshipsRequest) Reset() {
	*x = GetStarshipsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStarshipsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStarshipsRequest) ProtoMessage() {}

func (x *GetStarshipsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStarshipsRequest.ProtoReflect.Descriptor instead.
func (*GetStarshipsRequest) Descriptor() ([]byte, []int) {
	return file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescGZIP(), []int{1}
}

func (x *GetStarshipsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetStarshipsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Starships []*Starship `protobuf:"bytes,1,rep,name=starships,proto3" json:"starships,omitempty"`
}

func (x *GetStarshipsResponse) Reset() {
	*x = GetStarshipsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStarshipsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStarshipsResponse) ProtoMessage() {}

func (x *GetStarshipsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStarshipsResponse.ProtoReflect.Descriptor instead.
func (*GetStarshipsResponse) Descriptor() ([]byte, []int) {
	return file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescGZIP(), []int{2}
}

func (x *GetStarshipsResponse) GetStarships() []*Starship {
	if x != nil {
		return x.Starships
	}
	return nil
}

type ListStarshipsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListStarshipsRequest) Reset() {
	*x = ListStarshipsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStarshipsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStarshipsRequest) ProtoMessage() {}

func (x *ListStarshipsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStarshipsRequest.ProtoReflect.Descriptor instead.
func (*ListStarshipsRequest) Descriptor() ([]byte, []int) {
	return file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescGZIP(), []int{3}
}

func (x *ListStarshipsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListStarshipsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListStarshipsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Starships     []*Starship `protobuf:"bytes,1,rep,name=starships,proto3" json:"starships,omitempty"`
	NextPageToken string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListStarshipsResponse) Reset() {
	*x = ListStarshipsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStarshipsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStarshipsResponse) ProtoMessage() {}

func (x *ListStarshipsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStarshipsResponse.ProtoReflect.Descriptor instead.
func (*ListStarshipsResponse) Descriptor() ([]byte, []int) {
	return file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescGZIP(), []int{4}
}

func (x *ListStarshipsResponse) GetStarships() []*Starship {
	if x != nil {
		return x.Starships
	}
	return nil
}

func (x *ListStarshipsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_buf_knit_demo_swapi_starship_v1_starship_proto protoreflect.FileDescriptor

var file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x62, 0x75, 0x66, 0x2f, 0x6b, 0x6e, 0x69, 0x74, 0x2f, 0x64, 0x65, 0x6d, 0x6f, 0x2f,
	0x73, 0x77, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1f, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x8e, 0x05, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x67, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x6d, 0x67, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0d, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b,
	0x0a, 0x0f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x49,
	0x6e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x72, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x72, 0x65, 0x77, 0x12,
	0x2c, 0x0a, 0x12, 0x68, 0x79, 0x70, 0x65, 0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x68, 0x79, 0x70,
	0x65, 0x72, 0x44, 0x72, 0x69, 0x76, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61,
	0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x39, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x74, 0x6d, 0x6f, 0x73, 0x70, 0x68,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x70, 0x68, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x65, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x32, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x64,
	0x69, 0x74, 0x65, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6e,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x61, 0x74, 0x6d, 0x6f, 0x73, 0x70, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x22, 0x27, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x5f, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e,
	0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x22, 0x52, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x73,
	0x77, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x9a, 0x02, 0x0a,
	0x0f, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x80, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x73, 0x12, 0x34, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d,
	0x6f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e,
	0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03,
	0x90, 0x02, 0x01, 0x12, 0x83, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x35, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74,
	0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x62,
	0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x73, 0x77, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x42, 0xa8, 0x02, 0x0a, 0x23, 0x63, 0x6f,
	0x6d, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x6b, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76,
	0x31, 0x42, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x6b, 0x6e, 0x69, 0x74, 0x2d, 0x64, 0x65, 0x6d,
	0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x75, 0x66, 0x2f, 0x6b, 0x6e, 0x69,
	0x74, 0x2f, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x76, 0x31, 0xa2, 0x02, 0x05, 0x42, 0x4b, 0x44, 0x53, 0x53, 0xaa, 0x02, 0x1f, 0x42, 0x75,
	0x66, 0x2e, 0x4b, 0x6e, 0x69, 0x74, 0x2e, 0x44, 0x65, 0x6d, 0x6f, 0x2e, 0x53, 0x77, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1f,
	0x42, 0x75, 0x66, 0x5c, 0x4b, 0x6e, 0x69, 0x74, 0x5c, 0x44, 0x65, 0x6d, 0x6f, 0x5c, 0x53, 0x77,
	0x61, 0x70, 0x69, 0x5c, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x2b, 0x42, 0x75, 0x66, 0x5c, 0x4b, 0x6e, 0x69, 0x74, 0x5c, 0x44, 0x65, 0x6d, 0x6f, 0x5c,
	0x53, 0x77, 0x61, 0x70, 0x69, 0x5c, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x24,
	0x42, 0x75, 0x66, 0x3a, 0x3a, 0x4b, 0x6e, 0x69, 0x74, 0x3a, 0x3a, 0x44, 0x65, 0x6d, 0x6f, 0x3a,
	0x3a, 0x53, 0x77, 0x61, 0x70, 0x69, 0x3a, 0x3a, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescOnce sync.Once
	file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescData = file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDesc
)

func file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescGZIP() []byte {
	file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescOnce.Do(func() {
		file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescData = protoimpl.X.CompressGZIP(file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescData)
	})
	return file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDescData
}

var file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_buf_knit_demo_swapi_starship_v1_starship_proto_goTypes = []interface{}{
	(*Starship)(nil),              // 0: buf.knit.demo.swapi.starship.v1.Starship
	(*GetStarshipsRequest)(nil),   // 1: buf.knit.demo.swapi.starship.v1.GetStarshipsRequest
	(*GetStarshipsResponse)(nil),  // 2: buf.knit.demo.swapi.starship.v1.GetStarshipsResponse
	(*ListStarshipsRequest)(nil),  // 3: buf.knit.demo.swapi.starship.v1.ListStarshipsRequest
	(*ListStarshipsResponse)(nil), // 4: buf.knit.demo.swapi.starship.v1.ListStarshipsResponse
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_buf_knit_demo_swapi_starship_v1_starship_proto_depIdxs = []int32{
	5, // 0: buf.knit.demo.swapi.starship.v1.Starship.created:type_name -> google.protobuf.Timestamp
	5, // 1: buf.knit.demo.swapi.starship.v1.Starship.edited:type_name -> google.protobuf.Timestamp
	0, // 2: buf.knit.demo.swapi.starship.v1.GetStarshipsResponse.starships:type_name -> buf.knit.demo.swapi.starship.v1.Starship
	0, // 3: buf.knit.demo.swapi.starship.v1.ListStarshipsResponse.starships:type_name -> buf.knit.demo.swapi.starship.v1.Starship
	1, // 4: buf.knit.demo.swapi.starship.v1.StarshipService.GetStarships:input_type -> buf.knit.demo.swapi.starship.v1.GetStarshipsRequest
	3, // 5: buf.knit.demo.swapi.starship.v1.StarshipService.ListStarships:input_type -> buf.knit.demo.swapi.starship.v1.ListStarshipsRequest
	2, // 6: buf.knit.demo.swapi.starship.v1.StarshipService.GetStarships:output_type -> buf.knit.demo.swapi.starship.v1.GetStarshipsResponse
	4, // 7: buf.knit.demo.swapi.starship.v1.StarshipService.ListStarships:output_type -> buf.knit.demo.swapi.starship.v1.ListStarshipsResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_buf_knit_demo_swapi_starship_v1_starship_proto_init() }
func file_buf_knit_demo_swapi_starship_v1_starship_proto_init() {
	if File_buf_knit_demo_swapi_starship_v1_starship_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Starship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStarshipsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStarshipsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStarshipsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStarshipsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_buf_knit_demo_swapi_starship_v1_starship_proto_goTypes,
		DependencyIndexes: file_buf_knit_demo_swapi_starship_v1_starship_proto_depIdxs,
		MessageInfos:      file_buf_knit_demo_swapi_starship_v1_starship_proto_msgTypes,
	}.Build()
	File_buf_knit_demo_swapi_starship_v1_starship_proto = out.File
	file_buf_knit_demo_swapi_starship_v1_starship_proto_rawDesc = nil
	file_buf_knit_demo_swapi_starship_v1_starship_proto_goTypes = nil
	file_buf_knit_demo_swapi_starship_v1_starship_proto_depIdxs = nil
}
